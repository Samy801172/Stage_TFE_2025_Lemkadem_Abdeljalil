import { TypeOrmModuleOptions } from '@nestjs/typeorm';
import { configManager } from './config.manager';
import { ConfigKey } from './enum';

// Configuration SSL conditionnelle pour Render
const dbSsl = process.env.DB_SSL;

// D√©finition de la configuration TypeORM pour NestJS
export const typeOrmConfig: TypeOrmModuleOptions = {
  // Type de base de donn√©es (ex: 'postgres', 'mysql', etc.)
  type: configManager.getValue(ConfigKey.DB_TYPE) as any,

  // H√¥te de la base de donn√©es (ex: 'localhost')
  host: configManager.getValue(ConfigKey.DB_HOST),

  // Port de connexion √† la base de donn√©es (ex: 5432 pour Postgres)
  port: parseInt(configManager.getValue(ConfigKey.DB_PORT), 10),

  // Nom d'utilisateur pour la connexion √† la base de donn√©es
  username: configManager.getValue(ConfigKey.DB_USER),

  // Mot de passe pour la connexion √† la base de donn√©es
  password: configManager.getValue(ConfigKey.DB_PASSWORD),

  // Nom de la base de donn√©es √† utiliser
  database: configManager.getValue(ConfigKey.DB_DATABASE),

  // Chemin vers les entit√©s (ORM) √† charger
  entities: [__dirname + '/../../**/*.entity{.ts,.js}'],

  // Synchronisation automatique du sch√©ma (√† d√©sactiver en production !)
  synchronize: configManager.getValue(ConfigKey.DB_SYNC) === 'true',

  // Affichage des logs d'erreur et d'avertissement
  logging: ['error', 'warn'],

  // Garde la connexion active m√™me apr√®s un hot reload (utile en d√©veloppement)
  keepConnectionAlive: true,

  // Charge automatiquement les entit√©s (utile avec NestJS)
  autoLoadEntities: true,

  // Options suppl√©mentaires pour la connexion
  extra: {
    connectionTimeoutMillis: 10000, // Timeout de connexion (ms)
    query_timeout: 10000            // Timeout de requ√™te (ms)
  },

  // N'ex√©cute pas automatiquement les migrations au d√©marrage
  migrationsRun: false
};

// Configuration SSL pour PostgreSQL sur Render
if (dbSsl === 'true') {
  console.log('üîß [TypeORM Config] SSL activ√© pour PostgreSQL sur Render');
  (typeOrmConfig as any).ssl = {
    rejectUnauthorized: false, // Pour le d√©veloppement
  };
} else {
  console.log('üîß [TypeORM Config] SSL d√©sactiv√©');
}

console.log('üîß [TypeORM Config] Configuration finale:', JSON.stringify(typeOrmConfig, null, 2));
